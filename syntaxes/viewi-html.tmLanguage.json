{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Viewi HTML",
  "scopeName": "text.html.viewi",
  "fileTypes": [
    "html"
  ],
  "patterns": [
    {
      "include": "#viewi-escaped-braces"
    },
    {
      "include": "#viewi-double-braces"
    },
    {
      "include": "#viewi-single-braces"
    },
    {
      "include": "text.html.basic"
    }
  ],
  "repository": {
    "viewi-escaped-braces": {
      "name": "constant.character.escape.viewi",
      "match": "\\\\[{}]"
    },
    "viewi-double-braces": {
      "name": "meta.embedded.php",
      "begin": "(?<!\\$){{",
      "end": "}}",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.begin.viewi"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.end.viewi"
        }
      },
      "patterns": [
        {
          "include": "#php-expression"
        },
        {
          "include": "source.php"
        }
      ]
    },
    "viewi-single-braces": {
      "name": "meta.embedded.php",
      "begin": "(?<!\\$){(?!{)",
      "end": "}(?!})",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.begin.viewi"
        }
      },
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.template-expression.end.viewi"
        }
      },
      "patterns": [
        {
          "include": "#php-expression"
        },
        {
          "include": "source.php"
        }
      ]
    },
    "viewi-components": {
      "name": "meta.tag.viewi-component",
      "begin": "(<)([a-zA-Z0-9]*)",
      "end": "(/>|>)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.begin.html"
        },
        "2": {
          "name": "entity.name.tag.viewi-component"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.html"
        }
      },
      "patterns": [
        {
          "include": "text.html.basic#attribute"
        }
      ]
    },
    "php-expression": {
      "patterns": [
        {
          "name": "variable.other.php",
          "match": "\\$[a-zA-Z_][a-zA-Z0-9_]*"
        },
        {
          "name": "support.function.php",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
        },
        {
          "name": "keyword.operator.php",
          "match": "\\+|\\-|\\*|\\/|%|==|!=|<|>|<=|>=|&&|\\|\\||!"
        },
        {
          "name": "constant.numeric.php",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        },
        {
          "name": "string.quoted.single.php",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.php",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.double.php",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.php",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "keyword.control.php",
          "match": "\\b(if|else|elseif|endif|for|foreach|endfor|endforeach|while|endwhile|switch Ven|case|default|break|continue|return)\\b"
        },
        {
          "name": "constant.language.php",
          "match": "\\b(true|false|null)\\b"
        }
      ]
    }
  }
}